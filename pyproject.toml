[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "detecto"
description = "The ultimate anomaly detection."
readme = "README.md"
license = { text = "MIT" }
version = "0.1.0"
requires-python = ">=3.11.5"
authors = [
    {name = "Nino Lindenberg", email = "aeternalisingenium@proton.me"}
]
keywords = [
    "anomaly",
    "anomaly detection",
    "anomaly detector",
    "anomalous data",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11.5",
    "Programming Language :: Python :: 3.11.6",
    "Programming Language :: Python :: 3.12.0",
    "Topic :: Anomaly Detection",
    "Topic :: Anomaly Detection :: The Ultimate Anomaly Detector",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "click==8.1.7",
    "gitdb==4.0.10",
    "GitPython==3.1.37",
    "iniconfig==2.0.0",
    "markdown-it-py==3.0.0",
    "mdurl==0.1.2",
    "numpy==1.26.0",
    "packaging==23.1",
    "pandas==2.1.1",
    "pathspec==0.11.2",
    "pbr==5.11.1",
    "platformdirs==3.10.0",
    "pluggy==1.3.0",
    "Pygments==2.16.1",
    "python-dateutil==2.8.2",
    "pytz==2023.3.post1",
    "PyYAML==6.0.1",
    "rich==13.6.0",
    "scipy==1.11.3",
    "six==1.16.0",
    "smmap==5.0.1",
    "stevedore==5.1.0",
    "typing_extensions==4.8.0",
    "tzdata==2023.3",
]

[project.urls]
repository = "https://github.com/Aeternalis-Ingenium/Detecto"

[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[tool.black]
color=true
exclude = '''
    /(
        \.git
        | \._build
        | \.back.out
        | \.build
        | \.coverage
        | \.dist
        | \.hg
        | \.mypy_cache
        | \.tox
        | \.venv
        | ./src/coverage
        | blib2to3
        | ./tests
    )/
'''
include = '\.pyi?$'
line-length = 119

[tool.isort]
color_output = true
combine_as_imports = true
ensure_newline_before_comments = true
force_alphabetical_sort_within_sections = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 119
lines_between_sections = 1
multi_line_output = 3
profile = "black"
skip = [
    ".coverage",
    "coverage/*",
    "cov.*",
    ".dockerignore",
    ".env",
    ".github/*",
    ".gitignore",
    ".html",
    ".md",
    ".python-version",
    ".rst",
    ".xml"
]
skip_gitignore = true
src_paths = [
    "src/",
    "tests/",
]
use_parentheses = true

[tool.mypy]
check_untyped_defs = true
color_output = true
error_summary = true
exclude = "(build|data|dist|docs/src|images|logo|logs|output)/"
ignore_missing_imports = true
pretty = true
strict_optional = true
warn_no_return = true
warn_return_any = false

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "Acceptance"]
python_functions = ["test_*"]
testpaths = "tests"
filterwarnings = "error"
addopts = '''
    --verbose
    -p no:warnings
    --strict-markers
    --tb=short
    --cov=src
    --cov=tests
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:coverage/cov.html
    --cov-report=xml:coverage/cov.xml
    --no-cov-on-fail
    --cov-fail-under=55
'''
